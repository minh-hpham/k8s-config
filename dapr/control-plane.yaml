---
# Source: dapr/charts/dapr_dashboard/templates/dapr_dashboard_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-dashboard-disruption-budget
  labels:
    app: dapr-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-dashboard
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-operator-disruption-budget
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_placement/templates/dapr_placement_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-placement-server-disruption-budget
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-placement-server
      app.kubernetes.io/component: placement
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-sentry-budget
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-sentry
      app.kubernetes.io/component: sentry
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-sidecar-injector-disruption-budget
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-sidecar-injector
      app.kubernetes.io/component: sidecar-injector
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/dashboard.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/placement.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-webhook-cert
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0VENDQXAyZ0F3SUJBZ0lRTFlIRm4zU2t4bFQ3S3BhZnRJVW9EekFOQmdrcWhraUc5dzBCQVFzRkFEQWEKTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3SGhjTk1qTXdNekUwTVRBek16RTFXaGNOTXpNdwpNekV4TVRBek16RTFXakFYTVJVd0V3WURWUVFERXd4a1lYQnlMWGRsWW1odmIyc3dnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREVqdGNtMkthR2tPZE9ieUJDaHQwbVZkaTVZRTBnUFZwQlJsaTIKNjRwd1ZQRFZZL3UrNWEzZEJOcGZiV214bVQvTDNQYStUWnIzRU1XODVnU0RVS2FzR3duNkJ1ZVhHK0hFU0dURQpmY1ptMTIreDM0TVV6STF5bEJJbzB4SHk5Sm9CTU1ZaEd3UDhTQ0NSalh4c3d1empBYjFZRklkcnhRVUJubGN3CkVTM096ak9FK2FXV0Q2dXgrRlhmUVc3THhIWlQ2NVNPRm9WRlBaeG1oYWo1djl4MUt0a1BuU0NKOFRTS1ZtSEIKWEJFNVBYdzZROXllYTVMWXhQYVdQbjI1RGdpMWh1ckxTQ2R6cW16Mm1wbnk3ekliU056ZHA0amxmN2RKZmVkMApGT0Q2TTRoL2d1RW0rOXdmTi9MZ3dyZ3ZiVWlLRUJuQkRoMmVoTVhjYW5Ob0pWNUhBZ01CQUFHamdma3dnZll3CkRnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU0KQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGTkFEa2gyODljeENObnNubUdEN1BMcjFHTk5YTUlHVgpCZ05WSFJFRWdZMHdnWXFDR0dSaGNISXRkMlZpYUc5dmF5NWtZWEJ5TFhONWMzUmxiWUljWkdGd2NpMTNaV0pvCmIyOXJMbVJoY0hJdGMzbHpkR1Z0TG5OMlk0SWtaR0Z3Y2kxM1pXSm9iMjlyTG1SaGNISXRjM2x6ZEdWdExuTjIKWXk1amJIVnpkR1Z5Z2lwa1lYQnlMWGRsWW1odmIyc3VaR0Z3Y2kxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIM0pYVnYzUDJQSDhXOWNRa1YvMzc5OGN6Y2p4ZXY2CkZMRmxmRkFNRlpkNng1UlJCWHcyWkozUWZmUVdlbytKZzhTU2hmUWVuWk9DWkhTNDQ3V3dDejBFNnVPOStsNHcKLzRkL2dJdGtsNlVjSFE3WEROY09rOTB6cUZKLzFhSlRTUW90cTB2VkVXVTNid3cwdmtxZmFEc2w4T0E0NWdVNwo1dGV2cGM3czZxbEtvVzI2STZjV2Jlc3RnS1poZG1yano4czNVVFZlS0toeGtXTTlTRllNc1VPZk44Z0hwWi9WCjZDYWtGNjJyOTdyTWFSc2tIZXpVTlMzR3o2MzlLbXI2SzdteTJMQnQ2cXB5eWFlQnEwOThtQjg5elY3Znh0bEwKaGRyMTEvYnUzVzNNSFFHMDVWd2ptMWgzNmtkeHFFMXlDL1VvTFNrdHFodWkyRVBRZmNMNVNlZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  

  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeEk3WEp0aW1ocERuVG04Z1FvYmRKbFhZdVdCTklEMWFRVVpZdHV1S2NGVHcxV1A3CnZ1V3QzUVRhWDIxcHNaay95OXoydmsyYTl4REZ2T1lFZzFDbXJCc0orZ2JubHh2aHhFaGt4SDNHWnRkdnNkK0QKRk15TmNwUVNLTk1SOHZTYUFUREdJUnNEL0VnZ2tZMThiTUxzNHdHOVdCU0hhOFVGQVo1WE1CRXR6czR6aFBtbApsZytyc2ZoVjMwRnV5OFIyVSt1VWpoYUZSVDJjWm9XbytiL2NkU3JaRDUwZ2lmRTBpbFpod1Z3Uk9UMThPa1BjCm5tdVMyTVQybGo1OXVRNEl0WWJxeTBnbmM2cHM5cHFaOHU4eUcwamMzYWVJNVgrM1NYM25kQlRnK2pPSWY0TGgKSnZ2Y0h6Znk0TUs0TDIxSWloQVp3UTRkbm9URjNHcHphQ1ZlUndJREFRQUJBb0lCQVFDSWJ1V2tqeWszcW9rRApobHNNRW5TYTBXZTNkTUxVS0FIbjRSNWZDYXQwUVdGUm5TNzIySklRSWZnNTJNWk9naU1vTEY0UXhlbFVxUTI0CkNxa0RSUTRMMUZEZWZjQnV3T202eHMwN0hscUNzL05Sc2VWWW9JdG1CcVY4Tk5YMm9CWHQwWjhWQjUyQ2xjWVYKZ2ZIbHhIK05LbjMxRDNyWU1VOUNTbGdXZ3pZYW53cjJKTmdRa3hiTkF2MFUrdWdvRTNzYmFYa2ptcDJUWjNCMgo1UmhxL3FDMkR3aStwdjY2NTg5RUQ5dUQ3QU52NFJOTk85SFFnT3hhalN3c1Z4eFlHK1cvVWpNUEIvanZYMkdnClBCK1hOS3pSMStwVXVyMGovK2MydjVLd1N6RVp4ZnJGNGczU2xGRUhDdTVVUEVlV25NU2NCNGlCSUhDOG40R1QKVzB2clNBQ1JBb0dCQU9GYVAvS2k1R1ZPK3MzZklyZThNM1NrM3ZtZHFIR0UwSGtpaldBR0t5WEQxNXBqNzBHOApsbHd2SHNZTSt3STZFMGxKWXd0bEplKzlZT2F0MzVpN2JRaUhkQXlZZFo0K3VYaGpKdU03dXErMStyNWc3TjlQCi94SE1Hc0hPSFdENjNhUTJnTlUyV3hxVG9kRzcxMnVyd24vNXVpRW9ENDJxTEZyL1kvNHhWd3BMQW9HQkFOOUsKR0VPamxwQXZ4TjgzcEYxTGZjUEdhV3lISUtWV2ZJa2ZsWTdiYnIxOHFkYUVQZ3E3V3M5M0pYZVpYb2VlbW5sMApBYWQwS3B2SVpjVFRyU1h3RUtSZFFZSG8rSm52alE5R2lRVldUck02clhCR2VSUTVHa0E1RUV6dzU1eHNNNEVECjBVZUlaSDl2aWVZSlZ5VzhMWFlBbFZYQTNjYlJWRHE0VGtnUTdyNTFBb0dBUDNIY1BTQ1ZNdHlJaWZ0L1Y4RTUKcjJaWGpHbFJxaHdkWVcxVDVpdjJhOXgyVC9aQXZ2NHNTdW5OUFM4Y1lDVWZsdXQ5WWhEcEhGVHgraUFMcW9GaQpFaHVvbFg4NjVnRjgwQ01DS01tQkpzVVNRaFVodTBGWGE1aE9GREJHWHk1aHhrQytCc2tWM3lhZlVXQVVKekVsClFraDVtYW9ncnQ2eFBERlk0cERiazM4Q2dZRUFsNk4vSlBoRXVQam43MXVmVVFpQ2lXRUdtWUNQS0JtN0MzaWEKbmVEaHJPZXJnNVpkZC9aU3JwQlFybzlHaGoyczFJeDJ6eHp5RHNlaWJXLy9wOE1IMmtmR3hBM09QdVJUWEt0ZgpSSE9ma05KcGxOVVhSeWVjYno4UmxkOEl1ODh6and0anBmdTNuRi9JTzZQZVBpODBoRzNTL09DMC9GK09ueTRwClk0RzBVVDBDZ1lFQW0wUzlIaWRNM2JaSGYwVnVvcWR6RHdKTERQRUEwZ2lUbWlhekh0cHFDM0JiRk1Oa0pVZUgKOVBnSVVFc0VCSTZvb1J5NmxrK1hZeVk1UUtCYjFHYi9ZdUd6bUNwTHZwdktTT3Y5V2lCZ0p5TjBOd2tWTmxzawpqdXVVZWN2SFplYkZTVnF5cHIvbFVlVU9Ld1U4UkcyRTE4cVBjdmp6ZnhUN0xaWmtoUFpmLzc4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-webhook-ca
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
data:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lSQUtnLzE3OGh1MkVydDk4NTVQYk1pb013RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUI0WERUSXpNRE14TkRFd016TXhOVm9YRFRNegpNRE14TVRFd016TXhOVm93R2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcVd4QXRBT0tZZlZ0SWVBL2RIRXorUkEvdjF0U0VvZjgKZEM3QXB3OEs5UHM4cEJ6cGRpVnBTU0l3YWc3T0JqM1U5QVo5b1VaMVpKOUNsZHBGNktDMEFrNFdoOTZ4c0tnTgpmZHEvUCszMkdkbmtCTnNzNm9pRTFiSGZPTzREQ0V4ZGxpT3hlTTBqRFNRK3l4enB5LzhaUDdpTDR2WUNsNDVkCmJjZG9jVW8zM1ZJNjBGRDdBQ2lqSDNvNTlTak9QTEEwTkxrR0RERVpFOThhbnNnQW43cGQ0RHBocHd1VUtHQWkKZC9zcVNrWmF4SjNDWC9lekxYdEM2VXAvNTA4TDFUd25Sc0Q5MFUvM0dxTlg5Vko1eG9yS1k4ZVZnRHNvOWJmSgo5L0EvRzlCK3Z5cTBxeSs5cmVSOWY2VVpoSGQyRkxXZVQ3Zm12UUJlOGF0Y1NtYTcrM05pQlFJREFRQUJvMkV3Clh6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk5BRGtoMjg5Y3hDTm5zbm1HRDdQTHIxR05OWApNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNpeVhqT0EvWE1seTlEQUVzNzFiejRKQzROcFM3WTZXSWc2dU4wCitnN1pXaVBHeGtzT0xqaHFNOUVtTmZvdkVrTWFqcUF4Wnc0TXp6MHRtK0Rjc25UdEUwbnpIVndKZTRYeitZekQKY1A0RHFvZU44cnhOTGpmWlAyN0V6UWRKZ2lKOTRqWjIvVE1vUElCTXNnTE9vbFY0QXhzcXVJeVEzeStER3FhbApHa1R5YUk1Zmd3UmRnVFdDelVwNU1QMXVUSlBFdWptRnJtWXhlcTlhL2x3RUpTR0F2Qm0zaGtONzNlZDBncTFGCmFMZG1jQmxUVFpuNFE0V3BrRERFdVpuVFVSR2ZwOHRsU2lpWkQ0TEJpaWc5Y3JadDdON2xCc1R2TlhsS0h0eDMKYitSSlJSTWtxbWJQWVMxRlFXRmNSRklaemJ1MWp1bmdMeU9qclh2ZmdiVWQxV1F4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-trust-bundle
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
data:
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-sidecar-injector-cert
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ3VENDQXRXZ0F3SUJBZ0lRRWlFTlExZVowaXNVU0t4VGpITzNJVEFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhoa1lYQnlMWE5wWkdWallYSXRhVzVxWldOMGIzSXRZMkV3SGhjTk1qTXdNekUwTVRBegpNekUwV2hjTk16TXdNekV4TVRBek16RTBXakFnTVI0d0hBWURWUVFERXhWa1lYQnlMWE5wWkdWallYSXRhVzVxClpXTjBiM0l3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3BlR1RaUHZvM3lRUnMKYitOUHBnVEZ2Skg3Q1lpRlZYbU9ia21MZ05JT3lUOFl2cXVIQkhnK0tVSVoydEpRZGNVQmRaLzc0TlhzV1RoOQpid3lUbXVLRWE5VWQ1YmI1cmpLcGJSNllRM1dXMERnWXkvUmlZQWhtWFk0Z3AxRUd5WmxPVUlob0ZxU0gxQjJQCmNhUFhJbi9rMmRrZXNiSFkycWRiRm5nN3h4bWRKNXFMaUJRc2RZM2NTUTFUZHdTSXNFWFlkNXJXUXJuYXpPZ3UKQ0JJNFp6aXJaNXdVbCtYRGZjT1lXZW8zcDRIL0grZUhCTHlkcmg3S2ZZZm50bUVKRkxtQi9BdTdqV2RZbmoyMAoxMmhxcHRNN010SlA3YitMM3Uwd1VPQW9VMmhnWVBtdTR3cEs0aWdjSVV2S1FucE9XMlJTczVXMEtEWFFlYmlZClFHVlg2RWlqQWdNQkFBR2pnZ0VlTUlJQkdqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVRUZBRQpNZVNDQ0dQNThCbk5YVWJValdlTkp5RXdnYmtHQTFVZEVRU0JzVENCcm9JaFpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TG1SaGNISXRjM2x6ZEdWdGdpVmtZWEJ5TFhOcFpHVmpZWEl0YVc1cVpXTjBiM0l1WkdGd2NpMXoKZVhOMFpXMHVjM1pqZ2kxa1lYQnlMWE5wWkdWallYSXRhVzVxWldOMGIzSXVaR0Z3Y2kxemVYTjBaVzB1YzNaagpMbU5zZFhOMFpYS0NNMlJoY0hJdGMybGtaV05oY2kxcGJtcGxZM1J2Y2k1a1lYQnlMWE41YzNSbGJTNXpkbU11ClkyeDFjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBemRSUjN5WkoxRnVhd0pnM3RyNDQKRCtkNWtYcTNJY2ozN3N2eHBwajV3N1hKVi9EaVB6cnhWQUtMYkY0a2lSVXZDZzhGTStyVXBOU3owMlRSTzZzdQpaYkJtdEF2NjhWR1NCTy9tODk0RS9qdWFNT1RkSUZaeU4waTZTL3NSUnMwY29yazNNNThHS1J0cWNJdnlucmF1CjdrS2FDMUUwU09PSlZkZC9EZG5GL0Ivb3dBc0U5ZVlvL0R5SGx5T2JJWWlPdjNoakd5ZW5uUUlhZjFmWURZNzUKNGQ0TjFxZFZEN3NzanpaY1c1Y3Rhd2xQcHpTZ29yYUgvZStEcjROeEVLUnN6cmZVV3hjSlN1b1ZjT2V0T2x4dwpOS1JrTk1RWTlHQjZabVZ1NHRTNXBjZTZJTUpsVXFZOEZWMGU0cEVBNjJYa0hPTXF4aFY0Ry9oRUxCNlJRTWUrCnVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  

  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVhoazJUNzZOOGtFYkcvalQ2WUV4YnlSK3dtSWhWVjVqbTVKaTREU0Rzay9HTDZyCmh3UjRQaWxDR2RyU1VIWEZBWFdmKytEVjdGazRmVzhNazVyaWhHdlZIZVcyK2E0eXFXMGVtRU4xbHRBNEdNdjAKWW1BSVpsMk9JS2RSQnNtWlRsQ0lhQmFraDlRZGozR2oxeUovNU5uWkhyR3gyTnFuV3haNE84Y1puU2VhaTRnVQpMSFdOM0VrTlUzY0VpTEJGMkhlYTFrSzUyc3pvTGdnU09HYzRxMmVjRkpmbHczM0RtRm5xTjZlQi94L25od1M4Cm5hNGV5bjJINTdaaENSUzVnZndMdTQxbldKNDl0TmRvYXFiVE96TFNUKzIvaTk3dE1GRGdLRk5vWUdENXJ1TUsKU3VJb0hDRkx5a0o2VGx0a1VyT1Z0Q2cxMEhtNG1FQmxWK2hJb3dJREFRQUJBb0lCQUdON0tBQWJKdmp1U0dsNwpPTDE5b0ZtTyswYVk3d29PQmVBbFA0ampvdXRKR1gvbUZYeVpsQmd4VWZzcFo4SVJrQWJ1VEc2b0tndW15REZoCnFjbFA1MTZDaWtVVm50WnNlcExZV2xoWmFVS1JrZ3lFVlQ0V1QzZi92VG5QM2hHVThDaDN2OHNTVjV6Z1dFWG4KR0oxbVJCdE1BbGN4U2t3WTlwclMwdHVNWWEzTko2QldNZ2xWOXZXQjhBZFlEaDZrNnNqb2lpQnRWTUJjc0t1UgpyVUJnY2tzc2s5akFETUVZa0U2UU96eThnRXdYMHlZVnl5NW9UUVFzZFBFSW45V1ZkSi9vT3l6S2toMTJpbGV6ClZmMjFOQlA0RlJQZjZmTjJIamNmazRrUzJBNmZxejFKUWZrRTZTZXd6L1RsVkRkQWEwOWE5bktxNHA2bXZoNWgKTElzenpya0NnWUVBd295UVNpMTRTME1TdmdPV3N4NGNoQVNQS2J3enlwN3d0K2gzVVQ2eWtDQlVyVWNjQTFyUgpGeUI1eGMzMGVFeHZzZkJRbk9FOVNQRDlwQ1Z4MXBraHBoaXBEamJxVTlrSjN2TGhhZkxKS3lMRDBtc2E2cExSCjdvL2dPY3NHb0E0NElGTnU4YmFGcVcxU3lyUUxkT2E2VmZXb283OXJvZjl0Y1B4bHhscWdVZjBDZ1lFQTN2L3YKR2tWUUJuQ2RWRDluK0lYT2ZGWmd2dXkrNkc5amVMZFFGTXpSUDJuYk1odi8yMmFmY3VUVW5JN0FxbkdJM2Z3TwpmUXJRQ1ZnMWRBV3Q2Q1k1VVdHUE8xRXBHakZDa0EwME5TeG5jWHRnVWRzZGFrbWd3M2wzZ1pGeW1TOWFOL3VLCmRhaXZPK3BsamRHS1BXVzhMUEVXVTA0ZHBqdDRBang3VVZtMU54OENnWUJHNW9zL1BVcjF3ci8xMThENERpVSsKUjVzVkRxMmhUa05VQXJoWk40eEQwa1NKMGJ4M3pJVWU5SXJzZDU1OHFQNmJ6b1RTWjVPNkhYbVNkTU1EL2xLeApBWk82eG5DbmxoVnUxdjBuYTMrODVMS1E0TSt5WlVkMHRhSjE3WFBBcU8zemVmU1l5bmZ6d3cvRko5QjFEaEVpCmVxQzI3SEFCWGVFNHFBTS9Rby9pMFFLQmdHV2s0cWRtMElNZThaZGxEMDhJTG9ZZUdScnRibGNqN29Nbml5anYKOHJDazMzU0hycWVpcnlyL2dxbVpwOWdJeUFubXlmUFU2ZDVZaG9UTDBlanZBMUZFMXJTQzJlbEdhc0NlUkIyNApqNjM2UG4wUkV1ZFBpQ2VSUmhlWTVGTk9jaUR5VnJvcW1UVUdNaVBpVHRDTmZxZzllNStkQzRhcHRKblFWNlZNCjdueWhBb0dCQUw4ek5HRm1hSGFEMmYrb2J4UDYzTlcvL2RaRm0zK2lDQlI3eXQvZng3K24vY0ZyVHRRcG1McnIKdHFxbS9zUnBnbnJydGRYa3laaXlNSVZJdjNRZ0NLQ2JQaHN0VWl6eHpnMDdZM0QvQ1FlcnRZaCtvaFJlQjg5dwptZEpYYWlkWDRRL0FLRkJrUm40bERlR0YrMWxRUHdkVUMxcFl0MDl1L0FJYmIxeERuckExCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: dapr/charts/dapr_rbac/templates/dashboard.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "namespaces"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "components", "configurations"]
  verbs: ["get", "list"]
- apiGroups: ["dapr.io"]
  resources: ["components", "configurations"]
  verbs: ["get", "list"]
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations", "components"]
    verbs: [ "get", "list"]
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "patch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "statefulsets/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete"]
  - apiGroups: [""]
    resources: ["services","services/finalizers"]
    verbs: ["get", "list", "watch", "update", "create"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["dapr.io"]
    resources: ["components", "configurations", "subscriptions", "resiliencies"]
    verbs: [ "get", "list", "watch"]
---
# Source: dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules: []
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations"]
    verbs: ["list"]
---
# Source: dapr/charts/dapr_rbac/templates/dashboard.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-dashboard
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-dashboard
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-injector
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-operator-admin
---
# Source: dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-placement
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-placement
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-sentry
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
# We cannot use resourceNames for create because Kubernetes doesn't nessarily
# know resource names at authorization time.
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps", "events"]
    verbs: ["create"]
---
# Source: dapr/charts/dapr_rbac/templates/secret-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "update"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-injector
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-operator
---
# Source: dapr/charts/dapr_rbac/templates/secret-reader.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-sentry
---
# Source: dapr/charts/dapr_dashboard/templates/dapr_dashboard_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
  annotations:
spec:
  selector:
    app: dapr-dashboard
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-api
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  selector:
    app: dapr-operator
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 6500
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dapr-webhook
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  ports:
  - port: 443
    targetPort: 19443
    protocol: TCP
  selector:
    app: dapr-operator
---
# Source: dapr/charts/dapr_placement/templates/dapr_placement_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  selector:
    app: dapr-placement-server
  # placement must be able to resolve pod address to join initial cluster peers
  # before POD is ready
  publishNotReadyAddresses: true
  ports:
  - name: api
    port: 50005
  - name: raft-node
    port: 8201
  clusterIP: None
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  selector:
    app: dapr-sentry
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 50001
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dapr-sidecar-injector
  labels:
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app: dapr-sidecar-injector
---
# Source: dapr/charts/dapr_dashboard/templates/dapr_dashboard_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-dashboard
  labels:
    app: dapr-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-dashboard
  template:
    metadata:
      labels:
        app: dapr-dashboard
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      serviceAccountName: dapr-dashboard
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - dapr-dashboard
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: dapr-dashboard
        image: "docker.io/daprio/dashboard:0.12.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
        resources:
          {}
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-operator
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dapr-operator
  template:
    metadata:
      labels:
        app: dapr-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      containers:
      - name: dapr-operator
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/operator:1.10.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 6500
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
          - name: webhook-creds
            mountPath: /tmp/k8s-webhook-server/serving-certs
            readOnly: true
        command:
        - "/operator"
        args:
        - "--watch-interval"
        - "0"
        - "--max-pod-restarts-per-minute"
        - "20"
        - "--log-level"
        - "info"
        - "--log-as-json"
        - "--enable-metrics=false"
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
        - name: webhook-creds
          secret:
            secretName: dapr-webhook-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-operator
              topologyKey: topology.kubernetes.io/zone
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sentry
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dapr-sentry
  template:
    metadata:
      labels:
        app: dapr-sentry
        app.kubernetes.io/component: sentry
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      containers:
      - name: dapr-sentry
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/sentry:1.10.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 50001
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
        command:
        - "/sentry"
        args:
        - "--log-level"
        - info
        - "--log-as-json"
        - "--enable-metrics=false"
        - "--trust-domain"
        - cluster.local
      serviceAccountName: dapr-sentry
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-sentry
              topologyKey: topology.kubernetes.io/zone
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dapr-sidecar-injector
  template:
    metadata:
      labels:
        app: dapr-sidecar-injector
        app.kubernetes.io/component: sidecar-injector
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      serviceAccountName: dapr-injector
      containers:
      - name: dapr-sidecar-injector
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/injector:1.10.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        command:
        - "/injector"
        args:
        - "--log-level"
        - info
        - "--log-as-json"
        - "--enable-metrics=false"
        - "--healthz-port"
        - "8080"
        env:
        - name: TLS_CERT_FILE
          value: /dapr/cert/tls.crt
        - name: TLS_KEY_FILE
          value: /dapr/cert/tls.key
        - name: KUBE_CLUSTER_DOMAIN
          value: "cluster.local"
        - name: SIDECAR_IMAGE
          value: "docker.io/daprio/daprd:1.10.2"
        - name: SIDECAR_IMAGE_PULL_POLICY
          value: "IfNotPresent"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IGNORE_ENTRYPOINT_TOLERATIONS
          value: "[{\"effect\":\"NoSchedule\",\"key\":\"alibabacloud.com/eci\"},{\"effect\":\"NoSchedule\",\"key\":\"azure.com/aci\"},{\"effect\":\"NoSchedule\",\"key\":\"aws\"},{\"effect\":\"NoSchedule\",\"key\":\"huawei.com/cci\"}]"
        - name: SIDECAR_RUN_AS_NON_ROOT
          value: "true"
        - name: SIDECAR_READ_ONLY_ROOT_FILESYSTEM
          value: "true"
        ports:
        - name: https
          containerPort: 4000
          protocol: TCP
        resources:
          {}
        volumeMounts:
        - name: cert
          mountPath: /dapr/cert
          readOnly: true
      volumes:
      - name: cert
        secret:
          secretName: dapr-sidecar-injector-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-sidecar-injector
              topologyKey: topology.kubernetes.io/zone
---
# Source: dapr/charts/dapr_placement/templates/dapr_placement_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  serviceName: dapr-placement-server
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: dapr-placement-server
  template:
    metadata:
      labels:
        app: dapr-placement-server
        app.kubernetes.io/component: placement
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      containers:
      - name: dapr-placement-server
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/placement:1.10.2"
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
          - name: raft-log
            mountPath: /var/run/dapr/raft-log
        ports:
          - containerPort: 50005
            name: api
          - containerPort: 8201
            name: raft-node
        command:
        - "/placement"
        args:
        - "--id"
        - "$(PLACEMENT_ID)"
        - "--initial-cluster"
        - dapr-placement-server-0=dapr-placement-server-0.dapr-placement-server.dapr-system.svc.cluster.local:8201,dapr-placement-server-1=dapr-placement-server-1.dapr-placement-server.dapr-system.svc.cluster.local:8201,dapr-placement-server-2=dapr-placement-server-2.dapr-placement-server.dapr-system.svc.cluster.local:8201
        - "--raft-logstore-path"
        - "/var/run/dapr/raft-log/$(PLACEMENT_ID)"
        - "--log-level"
        - info
        - "--log-as-json"
        - "--enable-metrics=false"
        - "--tls-enabled"
        securityContext:
          runAsUser: 0
        env:
          - name: PLACEMENT_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      serviceAccountName: dapr-placement
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-placement-server
              topologyKey: topology.kubernetes.io/zone
  volumeClaimTemplates:
  - metadata:
      name: raft-log
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
# Source: dapr/charts/dapr_config/templates/dapr_default_config.yaml
apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  name: daprsystem
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  mtls:
    enabled: true
    workloadCertTTL: 24h
    allowedClockSkew: 15m
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
webhooks:
- name: sidecar-injector.dapr.io
  clientConfig:
    service:
      namespace: dapr-system
      name: dapr-sidecar-injector
      path: "/mutate"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRRk1Cd0wxaHBOcFRIZW5RekJ4U0N5REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhoa1lYQnlMWE5wWkdWallYSXRhVzVxWldOMGIzSXRZMkV3SGhjTk1qTXdNekUwTVRBegpNekUwV2hjTk16TXdNekV4TVRBek16RTBXakFqTVNFd0h3WURWUVFERXhoa1lYQnlMWE5wWkdWallYSXRhVzVxClpXTjBiM0l0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURYNUtkK0MvMEoKd2ppWElOQUxsNi9lTTFadnZnM0xXMVlBMGJ0Yy91SzhJL0ZNTlgydEt5dlVLUUovRnVDclJ5ek9LVTdTNWZCbQpYUUtsQUJXRU0vcDN4cHNRSG9YSDRVY3g1OFZRbVFMeTBRUVNkYWt6N1RXZ0NHZ2FMVGVaQnpVWHE2RzRlcVRUCkxXUWp6TzByQ1NkMStVQW15dE9iTWtGZkVSVjM4Ukh1c0dsd0MzempqRFJ5VzlQT0xKKzgzUDhRMDV5bE5nakYKYS9CNjBFbWZ0MXBHNnp5UHZUYk9XUW5vNm5Jb0pTTW9YRURINzdUT1NkZ2NUdVdUbFNZdHFFYnhIaW8wbFFmRApQcmlmN1pZZmZnUU9OSDZWT3RPaTlBdC9NbnFZQUZFbmxuWFNpT0lOOXREQkFVNy9qSldvdVJsdHJtdmtYbUJUClFDWDZqbmhQZzFrekFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVRUZBRQpNZVNDQ0dQNThCbk5YVWJValdlTkp5RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRisxZVdkNk5YdTh1VFBoCkNBRHpWY2RFTkZ3TjAyN0xlVndmT2FIZUNyVmk3MFVrSEJmTnR5L2FVbGYyWnJIM2o2WTJNWUdrdEMzWjRpM0YKdGhORVdkcXNGRVV6aXp0S0ZiL2dXQUNsaC9QM2JYT1RJVzE4LzVPS3ZycG5lMmcvOEhsV1pKNXIyaEZzbHQ2eQpCRktpbnhqNzRKMWJ0czFVNGVIMjBSdEVwVzlPbEU2TXg5eHpaWjg2U3dqY21LSElDYmlZdlk1OXdxWnk1M2F6CkNiTTRWck55NUk4bmE1c25YbnhKZk4xRk5iN3VMeVpMU3F2bGpoakRPTkxUazAwczJ6UkV5TkZxbXh6SklFQ0YKVk40TDVoM3hQTDdzYWJCNGxMbGJoaEhkc090MzlmQlVidXFKU0V2L1d5blkvalVjdVRvTjMyaldhQmQ5NUVycgp0UjE3L2ZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    resources:
    - pods
    operations:
    - CREATE
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
