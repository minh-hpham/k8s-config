---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-operator-disruption-budget
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_placement/templates/dapr_placement_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-placement-server-disruption-budget
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-placement-server
      app.kubernetes.io/component: placement
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-sentry-budget
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-sentry
      app.kubernetes.io/component: sentry
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dapr-sidecar-injector-disruption-budget
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  minAvailable: 1
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-sidecar-injector
      app.kubernetes.io/component: sidecar-injector
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/dashboard.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/placement.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dapr-webhook-cert
  namespace: dapr-webhook
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  secretName:  dapr-webhook-cert
  commonName: dapr-webhook.dapr-system.svc
  dnsNames:
    -  dapr-webhook.dapr-system.svc
  issuerRef:
    name: selfsigned
    kind: ClusterIssuer
    group: cert-manager.io
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-webhook-ca
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
data:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIekNDQWdlZ0F3SUJBZ0lRUm4wenEyL0lnVHBCeUViTWJwZHpOREFOQmdrcWhraUc5dzBCQVFzRkFEQWEKTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3SGhjTk1qTXdNekUxTVRVd056RXhXaGNOTXpNdwpNekV5TVRVd056RXhXakFhTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUQzQXBDK1A2REpWbDlyWm5xNlRxQmZwWVJWUVlRUFdzRlAKdzVOb2YvaEdnKzl2TlJ2eE9YblQvbjZQcmpOY0VxNlJaalJmU2VFSXk5MGtJV2pIcWF2QUxqKzJoVEVjejUrOApla0dOS21uTE1lVVJ1ZlRabDd2N05ocU1QNi9uWjNqV21aSWttbTFFUkRpVlpTOGhBRElrOHNlU2dDbzV5RmZIClBkNmtNNXpNc3E0dnZ0Q1lnOThRSlVHemxtU3FoTEEyVklnSWhmdDZYaUV4MVpYeVVVWXlCYjBqQjFzQmhiV3EKZlVzemdrTWwrMDhqcldYdXVIZi9mYzBZOTZVcDExVzlCeVc1ZElUR0RSSmFTclV2bGEvUDNOYmtvU0VJaDJPTgpmUCtKV00yMlB5RHBDZW9qKytPOThoaUJvUmZhQjhBSWNFTVI3ZkUwTEpjamFiZzE0ZGVOQWdNQkFBR2pZVEJmCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKRHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZ3hBYytvUkhoQ00wa0NXNmJPcE1SWnV5SnNVdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTU1hMFY4bzhmVEtlVkVINi95cE9vQ2dtVmNZdCtmYjI1RXNxMTRZCi9OQUdHUmVlWmRhZm16Sy92SFh6U29wSTNWTmdZUjlLYndvV0NxNllwM25FUVVac3BJSWJwaVh3RjBhYkhYV1EKOVFYTEUwQ011LzY5c0lsMFk5ZVJUK0tzMTh1d3I2MDhtaXRKUU16eVVMVklkYVBNMjRsYU1VVytxV2FDVUNuVgpWdkJvajBNTFRwU0Ixd0JPaGdFY1dNOWk2K2Z3QkllM1hpZUpmczgvaUxwQXFWUU1mc3RHUkw5cFhvYTFnd3dHClFaK3FnNmN2SFJuK0h6b0xMTFRKZ0l1MnZIUE1RanBpSFEyNHhCNDVkbDdQMWtESzdpSk41NEN3WlErcFdVeGsKbi9aSndIZ010U2tDcW9XTUFiQ2lheDNiZXQ5MlhGUFR0ZjdwTmtxSzNSTUFKaVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-trust-bundle
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
data:
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dapr-sidecar-injector-cert
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
  namespace: dapr-system
spec:
  secretName: dapr-sidecar-injector-cert
  commonName: dapr-sidecar-injector.dapr-system.svc
  dnsNames:
    - dapr-sidecar-injector.dapr-system.svc
  issuerRef:
    name: selfsigned
    kind: ClusterIssuer
    group: cert-manager.io
---
# Source: dapr/charts/dapr_rbac/templates/dashboard.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "namespaces"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "components", "configurations"]
  verbs: ["get", "list"]
- apiGroups: ["dapr.io"]
  resources: ["components", "configurations"]
  verbs: ["get", "list"]
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations", "components"]
    verbs: [ "get", "list"]
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "patch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "statefulsets/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete"]
  - apiGroups: [""]
    resources: ["services","services/finalizers"]
    verbs: ["get", "list", "watch", "update", "create"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["dapr.io"]
    resources: ["components", "configurations", "subscriptions", "resiliencies"]
    verbs: [ "get", "list", "watch"]
---
# Source: dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules: []
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations"]
    verbs: ["list"]
---
# Source: dapr/charts/dapr_rbac/templates/dashboard.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-dashboard
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-dashboard
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-injector
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-operator-admin
---
# Source: dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-placement
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-placement
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-sentry
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
# We cannot use resourceNames for create because Kubernetes doesn't nessarily
# know resource names at authorization time.
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps", "events"]
    verbs: ["create"]
---
# Source: dapr/charts/dapr_rbac/templates/secret-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "update"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: dapr/charts/dapr_rbac/templates/injector.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-injector
---
# Source: dapr/charts/dapr_rbac/templates/operator.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-operator
---
# Source: dapr/charts/dapr_rbac/templates/secret-reader.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: dapr/charts/dapr_rbac/templates/sentry.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-sentry
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-api
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  selector:
    app: dapr-operator
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 6500
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dapr-webhook
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  ports:
  - port: 443
    targetPort: 19443
    protocol: TCP
  selector:
    app: dapr-operator
---
# Source: dapr/charts/dapr_placement/templates/dapr_placement_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  selector:
    app: dapr-placement-server
  # placement must be able to resolve pod address to join initial cluster peers
  # before POD is ready
  publishNotReadyAddresses: true
  ports:
  - name: api
    port: 50005
  - name: raft-node
    port: 8201
  clusterIP: None
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  selector:
    app: dapr-sentry
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 50001
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dapr-sidecar-injector
  labels:
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app: dapr-sidecar-injector
---
# Source: dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-operator
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dapr-operator
  template:
    metadata:
      labels:
        app: dapr-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      containers:
      - name: dapr-operator
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/operator:1.10.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 6500
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
          - name: webhook-creds
            mountPath: /tmp/k8s-webhook-server/serving-certs
            readOnly: true
        command:
        - "/operator"
        args:
        - "--watch-interval"
        - "0"
        - "--max-pod-restarts-per-minute"
        - "20"
        - "--log-level"
        - "info"
        - "--log-as-json"
        - "--enable-metrics=false"
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
        - name: webhook-creds
          secret:
            secretName: dapr-webhook-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-operator
              topologyKey: topology.kubernetes.io/zone
---
# Source: dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sentry
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dapr-sentry
  template:
    metadata:
      labels:
        app: dapr-sentry
        app.kubernetes.io/component: sentry
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      containers:
      - name: dapr-sentry
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/sentry:1.10.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 50001
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
        command:
        - "/sentry"
        args:
        - "--log-level"
        - info
        - "--log-as-json"
        - "--enable-metrics=false"
        - "--trust-domain"
        - cluster.local
      serviceAccountName: dapr-sentry
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-sentry
              topologyKey: topology.kubernetes.io/zone
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dapr-sidecar-injector
  template:
    metadata:
      labels:
        app: dapr-sidecar-injector
        app.kubernetes.io/component: sidecar-injector
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      serviceAccountName: dapr-injector
      containers:
      - name: dapr-sidecar-injector
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/injector:1.10.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        command:
        - "/injector"
        args:
        - "--log-level"
        - info
        - "--log-as-json"
        - "--enable-metrics=false"
        - "--healthz-port"
        - "8080"
        env:
        - name: TLS_CERT_FILE
          value: /dapr/cert/tls.crt
        - name: TLS_KEY_FILE
          value: /dapr/cert/tls.key
        - name: KUBE_CLUSTER_DOMAIN
          value: "cluster.local"
        - name: SIDECAR_IMAGE
          value: "docker.io/daprio/daprd:1.10.2"
        - name: SIDECAR_IMAGE_PULL_POLICY
          value: "IfNotPresent"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IGNORE_ENTRYPOINT_TOLERATIONS
          value: "[{\"effect\":\"NoSchedule\",\"key\":\"alibabacloud.com/eci\"},{\"effect\":\"NoSchedule\",\"key\":\"azure.com/aci\"},{\"effect\":\"NoSchedule\",\"key\":\"aws\"},{\"effect\":\"NoSchedule\",\"key\":\"huawei.com/cci\"}]"
        - name: SIDECAR_RUN_AS_NON_ROOT
          value: "true"
        - name: SIDECAR_READ_ONLY_ROOT_FILESYSTEM
          value: "true"
        ports:
        - name: https
          containerPort: 4000
          protocol: TCP
        resources:
          {}
        volumeMounts:
        - name: cert
          mountPath: /dapr/cert
          readOnly: true
      volumes:
      - name: cert
        secret:
          secretName: dapr-sidecar-injector-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-sidecar-injector
              topologyKey: topology.kubernetes.io/zone
---
# Source: dapr/charts/dapr_placement/templates/dapr_placement_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  replicas: 3
  serviceName: dapr-placement-server
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: dapr-placement-server
  template:
    metadata:
      labels:
        app: dapr-placement-server
        app.kubernetes.io/component: placement
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.10.2
    spec:
      containers:
      - name: dapr-placement-server
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/placement:1.10.2"
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
          - name: raft-log
            mountPath: /var/run/dapr/raft-log
        ports:
          - containerPort: 50005
            name: api
          - containerPort: 8201
            name: raft-node
        command:
        - "/placement"
        args:
        - "--id"
        - "$(PLACEMENT_ID)"
        - "--initial-cluster"
        - dapr-placement-server-0=dapr-placement-server-0.dapr-placement-server.dapr-system.svc.cluster.local:8201,dapr-placement-server-1=dapr-placement-server-1.dapr-placement-server.dapr-system.svc.cluster.local:8201,dapr-placement-server-2=dapr-placement-server-2.dapr-placement-server.dapr-system.svc.cluster.local:8201
        - "--raft-logstore-path"
        - "/var/run/dapr/raft-log/$(PLACEMENT_ID)"
        - "--log-level"
        - info
        - "--log-as-json"
        - "--enable-metrics=false"
        - "--tls-enabled"
        securityContext:
          runAsUser: 0
        env:
          - name: PLACEMENT_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      serviceAccountName: dapr-placement
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dapr-placement-server
              topologyKey: topology.kubernetes.io/zone
  volumeClaimTemplates:
  - metadata:
      name: raft-log
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
# Source: dapr/charts/dapr_config/templates/dapr_default_config.yaml
apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  name: daprsystem
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
spec:
  mtls:
    enabled: false
    workloadCertTTL: 24h
    allowedClockSkew: 15m
---
# Source: dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.10.2
webhooks:
- name: sidecar-injector.dapr.io
  clientConfig:
    service:
      namespace: dapr-system
      name: dapr-sidecar-injector
      path: "/mutate"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQUxab2k2WUlDSjkrSmJTOWNmbTFiUFV3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSXpNRE14TlRFMQpNRGN3T1ZvWERUTXpNRE14TWpFMU1EY3dPVm93SXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TFdOaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNkJmSmlpenUKdVoxa2xHTnROaFVWc3krc2c5UDN3RFFrUlVTS25RRmg5K2JZNkxRMzhrcjg0SGFYcjVxRW9PcXo2bk5hSkR0bApWaENVU2RZb0R1b3h2UCsrUi9tMkFQTlllTU1ldy9vWktrWHRBdWVEVDdnL055VVo2N2dJSXcrdDVxalBtbVdGCmVKM3R4bGN6VVZHQ21waDVOQnZhdWlYb1hwRUhPM0dHaEgyOStqRjBQQjNueGdIOXBacFg1UGg4NDV6WVBMb3MKR0xYVkdSN1UwYkxuWkhhZDhNZUF4UWxCaDlKcG8yRzk2TWtkWGxJUG5ZR0RpalpuU3JvS01wa2I4eUxRRVZEYgpzS1hJYkhHYU05WFh6N1ViZmlxblpkK1hhM3Eva2NZRnJOUXB4d1BwNENxZ0hXc3RrczBQVG1pSG4yTVA0YXVMCmRVenVZNGplNnJqeUh3SURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkxWcApOUlRLMVNSVHZoM1hPNUVYYWlVaWdWOEhNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFiSU43WU1mOHBSYlhQCndSQjVLT2NBR2REd1Z0cmJTL296QWUrSnhYb1dpM0xDeHVUNEYyV3JseGx5eS9vTFB1QUJiZG56VUdObGF5bE4KWjZxekFsMUJybWFXMEt1ZG9OSWFGL3ZqYUlaTTZoYm1ESk9FbXM3M3lIdXkrZVVDUS95c0hNWDEwSW8vUXc5ZwpQa1BmVkg3QkFBN0k1MEFlVXVRRlJFOTRKblBVNTlDbEJuRVlFWEJTYUJuMi81NmtVak1WU05jaU5jRU9GdkcvCm5nZFZ5OTJ5bm5KNDUrZjhBNGxTdWFROEdvSi9mNHN0NEU0WWtGVUMxZ3dEQ3prbyt0WTdSU1JIb0Z3aWt6N2QKZVZhODFBS1BtZUF3OW8wUEMvTXNVelBpRFdTSVVFaExtMFJpMmJ4TGdyUnNUc2ZmQkNJaFF4ZzRSVDdGL3dwYgpRcGhYSW1pRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    resources:
    - pods
    operations:
    - CREATE
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
